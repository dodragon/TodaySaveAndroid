[versions]
# Android & Kotlin
agp = "8.10.1"
javaxInject = "1"
kotlin = "2.1.10"
coreKtx = "1.16.0"
kotlinxCoroutinesCore = "1.8.1"
lifecycleRuntimeKtx = "2.9.1"
activityCompose = "1.10.1"
ksp = "2.1.10-1.0.30"
googleGmsServices = "4.4.3"

# Compose
composeBom = "2025.06.01"

# Firebase
firebaseBom = "33.16.0"
crashlyticsPlugin = "3.0.4"

# Google
googleAuth = "1.1.1"

# Kakao
kakao = "2.21.4"

# Naver
naverAuth = "5.10.0"

# Splash
splashscreen = "1.0.1"

# DI
hilt = "2.56.2"

# Networking
retrofit = "3.0.0"
okhttp = "4.12.0"
gson = "2.13.1"

# DataStore
datastore = "1.1.7"

# Image Loading
coil = "2.7.0"

# Logging
napier = "2.7.1"

# Licenses
aboutlibraries = "11.2.0"

# Testing
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
jetbrainsKotlinJvm = "2.1.10"
appcompat = "1.7.1"
material = "1.12.0"

# --- [libraries] 섹션: 가독성을 위해 group, name 형식으로 통일 ---
[libraries]
# AndroidX & Lifecycle
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "splashscreen" }

# Compose (BOM을 사용하므로 버전 명시 불필요)
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }

# Hilt (DI)
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }

# Networking (Retrofit, OkHttp, Moshi)
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp-core = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-loggingInterceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# DataStore
datastore = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

# Image Loading
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

# Logging
napier = { group = "io.github.aakira", name = "napier", version.ref = "napier"}

# Open Source Licenses
aboutlibraries-core = { group = "com.mikepenz", name = "aboutlibraries-core", version.ref = "aboutlibraries" }
aboutlibraries-compose = { group = "com.mikepenz", name = "aboutlibraries-compose-m3", version.ref = "aboutlibraries" }

# Google
google-auth = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleAuth" }

# Kakao
kakao-user = { module = "com.kakao.sdk:v2-user", version.ref = "kakao" }

# Naver
naver-oauth = { module = "com.navercorp.nid:oauth", version.ref = "naverAuth" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


# --- [plugins] 섹션: id와 version.ref를 사용하여 명확하게 정의 ---
[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt-gradle = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
android-library = { id = "com.android.library", version.ref = "agp" }
aboutlibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutlibraries" }
google-gms-services = { id = "com.google.gms.google-services", version.ref = "googleGmsServices" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsPlugin" }


# --- [bundles] 섹션: 관련된 라이브러리 그룹화 ---
[bundles]
# 네트워킹 관련 라이브러리 묶음
network = ["retrofit-core", "converter-scalars", "converter-gson", "okhttp-core", "okhttp-loggingInterceptor", "gson"]

# Compose UI 구현에 필요한 기본 라이브러리 묶음
compose-ui = ["androidx-ui", "androidx-ui-graphics", "androidx-ui-tooling-preview", "androidx-material3", "androidx-activity-compose"]

# 유닛 테스트와 안드로이드 테스트를 위한 라이브러리 묶음
testing = ["junit", "androidx-junit", "androidx-espresso-core"]

# Compose 테스트를 위한 라이브러리 묶음
compose-testing = ["androidx-ui-test-junit4"]